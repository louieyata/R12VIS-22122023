@model R12VIS.Models.Vaccination
@{
    ViewBag.Title = "PreVaccination";
}



<main id="main" class="main">

    <div class="pagetitle">
        <h1>Vaccination</h1>
        <nav>
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="index.html">Home</a></li>
                <li class="breadcrumb-item">Vaccination</li>
                @*<li class="breadcrumb-item active">Blank</li>*@
            </ol>
        </nav>
    </div><!-- End Page Title -->

    <section class="section">
        <div class="row justify-content-center">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Vaccination Details</h5>

                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()


                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="row">
                                <div class="col-6">

                                    <div class="col-12 mb-3">
                                        @Html.LabelFor(model => model.PriorityGroupID, "Priority Group", htmlAttributes: new { @class = "form-label" })
                                        @Html.DropDownList("PriorityGroupID", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.PriorityGroupID, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-12 mb-3">
                                        @Html.LabelFor(model => model.Comorbidity, htmlAttributes: new { @class = "form-label" })
                                        @Html.EditorFor(model => model.Comorbidity, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Comorbidity, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-12 mb-3">
                                        @Html.LabelFor(model => model.Person.UniquePersonID, htmlAttributes: new { @class = "form-label" })
                                        @Html.EditorFor(model => model.Person.UniquePersonID, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Person.UniquePersonID, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-12 mb-3">
                                        @Html.LabelFor(model => model.Person.FirstName, htmlAttributes: new { @class = "form-label" })
                                        @Html.EditorFor(model => model.Person.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Person.FirstName, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="col-12 mb-3">
                                        @Html.LabelFor(model => model.Person.FirstName, htmlAttributes: new { @class = "form-label" })
                                        @Html.EditorFor(model => model.Person.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Person.FirstName, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="col-12 mb-3">
                                        @Html.LabelFor(model => model.Person.MiddleName, htmlAttributes: new { @class = "form-label" })
                                        @Html.EditorFor(model => model.Person.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Person.MiddleName, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="col-12 mb-3">
                                        @Html.LabelFor(model => model.Person.LastName, htmlAttributes: new { @class = "form-label" })
                                        @Html.EditorFor(model => model.Person.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Person.LastName, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-12 mb-3">
                                        @Html.LabelFor(model => model.Person.Suffix, htmlAttributes: new { @class = "form-label" })
                                        @Html.EditorFor(model => model.Person.Suffix, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Person.Suffix, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-12 mb-3">
                                        @Html.LabelFor(model => model.Person.isPWD, htmlAttributes: new { @class = "form-label" })
                                        <div class="form-check form-switch">
                                            @Html.CheckBoxFor(model => model.Person.isPWD, new { @class = "form-check-input" })
                                            @Html.ValidationMessageFor(model => model.Person.isPWD, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-12 mb-3">
                                        @Html.LabelFor(model => model.Person.GuardianName, htmlAttributes: new { @class = "form-label" })
                                        @Html.EditorFor(model => model.Person.GuardianName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Person.GuardianName, "", new { @class = "text-danger" })
                                    </div><div class="col-12 mb-3">
                                        @Html.LabelFor(model => model.Person.ContactNumber, htmlAttributes: new { @class = "form-label" })
                                        @Html.EditorFor(model => model.Person.ContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Person.ContactNumber, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-12 mb-3">
                                        @Html.LabelFor(model => model.Person.EthnicGroupID, "Indigenous Member", htmlAttributes: new { @class = "form-label" })
                                        @Html.DropDownList("EthnicGroupID", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Person.EthnicGroupID, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-12 mb-3">
                                        @Html.LabelFor(model => model.PriorityGroupID, "Province", htmlAttributes: new { @class = "form-label" })
                                        @Html.DropDownList("PriorityGroupID", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.PriorityGroupID, "", new { @class = "text-danger" })
                                    </div>


                                    @*<div class="col-12 mb-3">
                                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "fomr-label" })
                                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="col-12 mb-3">
                                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "form-label" })
                                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="col-12 mb-3">
                                            @Html.LabelFor(model => model.isActive, htmlAttributes: new { @class = "form-label" })
                                            <div class="form-check form-switch">
                                                @Html.CheckBoxFor(model => model.isActive, new { @class = "form-check-input", @checked = "checked" })
                                                @Html.ValidationMessageFor(model => model.isActive, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="col-12 mb-3">
                                            @Html.LabelFor(model => model.RoleID, "Role", htmlAttributes: new { @class = "form-label" })
                                            @Html.DropDownList("RoleID", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.RoleID, "", new { @class = "text-danger" })
                                        </div>*@
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    @*<button type="submit" value="Create" class="btn btn-primary" />*@
                                    <button type="submit" class="btn btn-primary">Submit</button>
                                </div>
                            </div>
                        }

                        <div>
                            @Html.ActionLink("Back to List", "Index")
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

</main><!-- End #main -->



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
