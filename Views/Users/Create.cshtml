@model R12VIS.Models.User

@{
    ViewBag.Title = "Create";
}




<main id="main" class="main">

    <div class="pagetitle">
        <h1>User</h1>
        <nav>
            <ol class="breadcrumb">
                <li class="breadcrumb-item">User</li>
                <li class="breadcrumb-item active">Create</li>
            </ol>
        </nav>
    </div><!-- End Page Title -->

    <section class="section">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Create</h5>

                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()


                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="col-12 mb-3">
                                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "form-label" })
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-12 mb-3">
                                @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "form-label" })
                                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-12 mb-3">
                                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "form-label" })
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-12 mb-3">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "fomr-label" })
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-12 mb-3">
                                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "form-label" })
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-12 mb-3">
                                @Html.LabelFor(model => model.isActive, htmlAttributes: new { @class = "form-label" })
                                <div class="form-check form-switch">
                                    @Html.CheckBoxFor(model => model.isActive, new { @class = "form-check-input", @checked = "checked" })
                                    @Html.ValidationMessageFor(model => model.isActive, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-12 mb-3">
                                @Html.LabelFor(model => model.RoleID, "Role", htmlAttributes: new { @class = "form-label" })
                                @Html.DropDownList("RoleID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.RoleID, "", new { @class = "text-danger" })
                            </div>

                            <div class="row">
                                <div class="col text-end pt-3">
                                    <input type="submit" value="Create" class="btn btn-primary" />
                                    <a href="@Url.Action("Index")" class="btn btn-outline-secondary">Back to List</a>
                                </div>
                            </div>
                        }

                    </div>
                </div>
            </div>
        </div>
    </section>

</main><!-- End #main -->



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
